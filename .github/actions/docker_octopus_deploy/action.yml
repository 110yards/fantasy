name: "Container Build and Release"
description: "Build a container using docker/buildx and deploy using octopus. Assumes a 'Deploy' process with 'container1' image configured."

inputs:
  REGISTRY_URL:
    required: true

  REGISTRY_USER:
    required: true

  REGISTRY_PASSWORD:
    required: true

  OCTOPUS_API_KEY:
    required: true

  OCTOPUS_SERVER:
    required: true

  WORKING_DIR:
    required: true

  OCTOPUS_PROJECT:
    required: true

  OCTOPUS_SERVICE_NAME:
    required: true

  IMAGE_NAME:
    required: true

  VERSION:
    required: true

  TARGET:
    required: true

runs:
  using: "composite"

  steps:
    # build
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Docker login
      uses: docker/login-action@v1
      with:
        registry: ${{ inputs.REGISTRY_URL }}
        username: ${{ inputs.REGISTRY_USER }}
        password: ${{ inputs.REGISTRY_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: ${{ inputs.WORKING_DIR }}
        build-args: |
          VERSION=${{ inputs.VERSION }}
        push: true
        tags: ${{inputs.REGISTRY_URL}}/memberportals/${{ inputs.IMAGE_NAME }}:${{ inputs.VERSION }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # release
    - name: Install Octopus CLI üêô
      uses: OctopusDeploy/install-octopus-cli-action@v1.1.2
      with:
        version: latest

    - name: Create a release in Octopus Deploy üêô
      uses: OctopusDeploy/create-release-action@v1.1.2
      with:
        api_key: ${{ inputs.OCTOPUS_API_KEY }}
        project: ${{ inputs.OCTOPUS_PROJECT }}
        server: ${{ inputs.OCTOPUS_SERVER }}
        packages: |
          Deploy:container1:${{ inputs.VERSION }}
        release_number: ${{ inputs.VERSION }}
        deploy_to: "Member Portals ${{ inputs.TARGET }}"
