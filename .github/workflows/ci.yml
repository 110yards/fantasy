name: "Continuous Integration"

on:
  pull_request:
    paths-ignore:
      - "**/*.md"

  push:
    branches:
      - develop

    paths-ignore:
      - "**/*.md"

jobs:
  changes:
    name: Calculate changes
    runs-on: ubuntu-latest

    outputs:
      web: ${{ steps.changes.outputs.web }}
      api: ${{ steps.changes.outputs.api }}
      importer: ${{ steps.changes.outputs.importer }}
      system: ${{ steps.changes.outputs.system }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: Calculate path changes
        uses: mdryden/paths-filter@4067d885736b84de7c414f582ac45897079b0a78
        id: changes
        with:
          # To add a new service to CI, you must add an filter here:
          filters: |
            web:
              - "web/**"
            api:
              - "services/api/**"
            importer:
              - "services/importer/**"
            system:
              - "services/system/**"

  api:
    name: "api"
    runs-on: ubuntu-latest
    needs: ["changes"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: "3.11"

      - name: Install dependencies
        working-directory: services/api
        run: |
          pip install -r requirements.txt
          pip install -r dev-requirements.txt

      - name: Run checks
        working-directory: services/api
        run: .scripts/python/checks.sh ${{ env.SERVICE_DIR }}

      # Deploy to test
      - name: Setup gcloud
        env:
          CLOUDSDK_PYTHON: /usr/bin/python3
        with:
          project_id: ${{ secrets.REGISTRY }}
          service_account_key: ${{secrets.TEST_GCLOUD_CREDENTIALS}}
          export_default_credentials: true
        uses: google-github-actions/setup-gcloud@v0

      - name: Prepare deployment directory
        run: |
          ./prepare-run.sh ${{ env.SERVICE_DIR }}

      - name: Archive and deploy (test)
        working-directory: .tmp
        env:
          CLOUDSDK_PYTHON: /usr/bin/python3
          REGISTRY: ${{ secrets.REGISTRY }}
          TAG: ${{ github.sha }}
          TARGET_PROJECT: ${{ secrets.TEST_GCLOUD_PROJECT }}
          ENDPOINT: ${{ secrets.TEST_ENDPOINT }}
          ORIGINS: ${{ secrets.TEST_ORIGINS }}
          API_KEY: ${{ secrets.TEST_API_KEY }}
        run: |
          ./archive.sh $TAG $REGISTRY
          ./deploy.sh $TAG $REGISTRY $TARGET_PROJECT $ENDPOINT $ORIGINS

      - name: Smoke test (test)
        working-directory: .tmp
        env:
          TAG: ${{ github.sha }}
          ENDPOINT: ${{ secrets.TEST_ENDPOINT }}
          API_KEY: ${{ secrets.TEST_API_KEY }}
          CLIENT_ORIGIN: ${{ secrets.TEST_ORIGINS }}
        run: python smoke_test_script.py

      # Deploy to live
      - name: Deploy (live)
        working-directory: .tmp
        env:
          CLOUDSDK_PYTHON: /usr/bin/python3
          REGISTRY: ${{ secrets.REGISTRY }}
          TAG: ${{ github.sha }}
          TARGET_PROJECT: ${{ secrets.LIVE_GCLOUD_PROJECT }}
          ENDPOINT: ${{ secrets.LIVE_ENDPOINT }}
          ORIGINS: ${{ secrets.LIVE_ORIGINS }}
        run: |
          ./deploy.sh $TAG $REGISTRY $TARGET_PROJECT $ENDPOINT $ORIGINS

      - name: Smoke test (live)
        working-directory: .tmp
        env:
          TAG: ${{ github.sha }}
          ENDPOINT: ${{ secrets.LIVE_ENDPOINT }}
          API_KEY: ${{ secrets.LIVE_API_KEY }}
          CLIENT_ORIGIN: ${{ secrets.LIVE_ORIGINS }}
        run: python smoke_test_script.py
