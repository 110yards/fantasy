apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  ports:
    - port: 5432
  selector:
    name: postgres
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      name: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: postgres
    spec:
      containers:
        - image: postgres:15
          name: postgres
          env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: environment
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: environment
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: environment
                  key: POSTGRES_PASSWORD
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgres/data
              name: postgres-claim0

      restartPolicy: Always
      volumes:
        - name: postgres-claim0
          persistentVolumeClaim:
            claimName: postgres-claim0
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: postgres
spec:
  ingressClassName: nginx
  rules:
    - host: postgres.k8s.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: postgres
                port:
                  number: 80
