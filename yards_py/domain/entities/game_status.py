# generated by datamodel-codegen:
#   filename:  event_status.json
#   timestamp: 2021-03-19T11:37:34+00:00

from __future__ import annotations
from typing import Literal, Optional

from pydantic import BaseModel


class GameStatus(BaseModel):
    status_id: Literal["pre_game", "in_progress", "final", "postponed", "cancelled"]
    is_active: bool
    has_started: bool
    quarter: Optional[int]
    minutes: Optional[int]
    seconds: Optional[int]
    down: Optional[int]
    yards_to_go: Optional[int]

    @property
    def is_postponed(self) -> bool:
        return self.status_id == "postponed"
    
    @property
    def is_cancelled(self) -> bool:
        return self.status_id == "cancelled"
    
    @property
    def is_final(self) -> bool:
        return self.status_id == "final"
    
    @property
    def is_in_progress(self) -> bool:
        return self.status_id == "in_progress"
    
    @property
    def is_pre_game(self) -> bool:
        return self.status_id == "pre_game"
    
    @property
    def name(self) -> str:
        return self.status_id.replace("_", " ").title()

    @staticmethod
    def create_pre_game() -> GameStatus:
        return GameStatus(
            status_id="pre_game",
            is_active=False,
            has_started=False,
            quarter=None,
            minutes=None,
            seconds=None,
            down=None,
            yards_to_go=None,
        )
